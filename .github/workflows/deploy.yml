name: Deploy RAG App

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.9'

      - name: Install Dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Start Backend
        run: |
          uvicorn main:app --host 0.0.0.0 --port 8000 &
          sleep 5  # Wait for the backend to start
        env:
          PYTHONPATH: "${{ github.workspace }}"

      - name: Run Tests
        run: pytest tests/
        env:
          PYTHONPATH: "${{ github.workspace }}"

  deploy:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Log in to DockerHub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build and Push Docker Images
        run: |
          docker build -t myrag-backend -f backend.Dockerfile .
          docker build -t myrag-frontend -f frontend.Dockerfile .
          docker tag myrag-backend ${{ secrets.DOCKER_USERNAME }}/myrag-backend:latest
          docker tag myrag-frontend ${{ secrets.DOCKER_USERNAME }}/myrag-frontend:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/myrag-backend:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/myrag-frontend:latest


      - name: Deploy with Docker Compose
        run: docker-compose up -d

    env:
      GROQ_API_KEY: "${{ secrets.GROQ_API_KEY }}"
